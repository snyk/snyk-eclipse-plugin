# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build Plugin with Maven

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Decode Keystore
        id: decode_keystore
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && matrix.os == 'ubuntu-latest' }}
        env:
          fileName: ./keystore.jks
          encodedString: ${{ secrets.KEYSTORE }}
          sha: ${{ secrets.KEYSTORE_SHA }}
        run: |
          echo "$encodedString" | base64 -d > $fileName
          echo "$sha  $fileName" > sha256.txt
          sha256sum -c sha256.txt

      - uses: pmd/pmd-github-action@v2
        name: Lint
        id: pmd
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
            rulesets: 'plugin/src/main/resources/pmd-ruleset.xml'
            sourcePath: 'plugin/src/main/java'
            analyzeModifiedFilesOnly: true

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
            sarif_file: pmd-report.sarif

      - name: Fail build if violations found
        if: steps.pmd.outputs.violations != 0
        run: exit 1

      - name: Build with Maven
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && matrix.os == 'ubuntu-latest' }}
        run: ./mvnw clean verify -P sign -DtrimStackTrace=false
        env:
          KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}

      - name: Build with Maven
        if: ${{ github.ref != 'refs/heads/main' }}
        run: |
          ./mvnw clean verify -DtrimStackTrace=false

      - name: Upload binaries to static.snyk.io
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && matrix.os == 'ubuntu-latest' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_REGION: us-east-1
        run: |
          .github/upload-to-s3.sh preview
